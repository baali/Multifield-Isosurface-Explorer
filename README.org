Kappa GUI Application Readme

* Overview
  Identification of important isovalues of scalar fields is a well studied 
  problem. In this application we have used a relation-aware method to 
  explore scalar multifield data. In the context of multi-field data,
  we calculate a variation density function, whose profile is a good 
  indicator of interesting isovalues of individual scalar fields. It is 
  based on paper about [[http://vgl.serc.iisc.ernet.in/pub/paper.php?pid=013][Relation-aware isosurface extraction in multi-field data]].
  As part of the application, we have a graph viewer to plot the variation
  density function against isovalues and an Isosurface viewer to interact 
  with Isosarfaces.
#+LaTeX: \newpage
* Installation
  Download Kappa-app from github
  #+BEGIN_SRC shell
  $ git clone https://github.com/baali/Kappa-app.git
  $ cd Kappa-app
  $ mkdir build
  $ cd build
  $ cmake ..
  $ make
  #+END_SRC

  + Dependencies
    - OpenCL drivers.
    - VTK 5.9+ build with 
      #+BEGIN_SRC shell
      cmake -DVTK_USE_QT=ON -DVTK_USE_GUISUPPORT=ON -DBUILD_SHARED_LIBS=ON 
      #+END_SRC
#+LaTeX: \newpage      

* Usage
  + To start application navigate to build folder and either double clik
    qtevents file or in terminal type
    #+BEGIN_SRC shell
    $ ./qtevents
    #+END_SRC

    #+ATTR_LaTeX: width=10cm
    [[./images/app_start.png]]

  + It works for Unstructured data grid with multiple scalar fields. 
  + The isosurface shown in one of the window is for scalar field in first 
    drop down list. 

    #+ATTR_LaTeX: width=10cm
    [[./images/load_file.png]]
  + Select two scalar fields from drop down menu, among which you want to 
    calculate variation density function. 

  + There will be two charts displayed after calculations are over, one is 
    of Variation Density function and other one is for isosurface Statistics.

    #+ATTR_LaTeX: height=8cm 
    [[./images/calculation.png]]

    #+LaTeX: \newpage
  + To change isovalues, you can either click on points displayed in the 
    Chart, use slider or the text box.

    #+ATTR_LaTeX: height=8cm 
    [[./images/interaction.png]]
    
* Breakdown
  + GUI 
    - GUI4.ui is the UI design of application.
    - GUI4.h and GUI4.cxx are files where all the signals and slots are 
      defined. 
  + OpenCL 
    - pointData.cl is the kernel file.
    - Points.Cxx takes care of creating buffers, passing the data to GPU
      and invoking kernel.
    - cll.cpp and cll.h are files which take care of Hardware detection, 
      kernel compilation and all.

* Issues/TODOs
  + Not able to highlight the selected point on the chart.
  + Still there are cases when I am getting NaN during calculations, locate 
    and handle them.

* Credits
  + [[http://drona.csa.iisc.ernet.in/~vijayn/][Vijay Natrajan]] for his guidance and feedback.
  + Suthambhara, it was his code base and research work which is behind this 
    application.
  + [[https://github.com/ccluri][Chaitanya]] and Dilip for all the help in getting GUI setup and other 
    tweeks working.
  + [[https://github.com/punchagan][punchagan]]
  + Code base for GUI are taken from VTK Example kits for Qt.
  + OpenCL tutorials and source code from [[http://enja.org/][enja]]. Base of all openCL code for this
    application was taken from his [[https://github.com/enjalot/adventures_in_opencl/][github]] repository.
